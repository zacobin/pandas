# Copyright (c) pandas
# SPDX-License-Identifier: Apache-2.0

apiVersion: extensions/v1beta1
kind: Ingress
metadata:
{{- if .Values.ingress.annotations }}
  annotations:
{{ toYaml .Values.ingress.annotations | indent 4 }}
{{- end }}
{{- if .Values.ingress.labels }}
  labels:
{{ toYaml .Values.ingress.labels | indent 4 }}
{{- end }}
  name: {{.Values.docker.image_prefix}}nginx-ingress
spec:
  rules:
    - host: "{{ .Values.ingress.hostname }}"
      http:
        paths:
          - path: /
            backend:
              serviceName: {{.Values.docker.image_prefix}}ui
              servicePort: 3000
            path: /
          - path: /version
            backend:
              serviceName: {{.Values.docker.image_prefix}}things
              servicePort: 8182
{{- if .Values.ingress.tls }}
  tls:
    - hosts:
        - {{ .Values.ingress.tls.hostname }}
      secretName: {{ .Values.ingress.tls.secret }}
{{- end }}
---
apiVersion: extensions/v1beta1
kind: Ingress
metadata:
  annotations:
    nginx.ingress.kubernetes.io/rewrite-target: /$1
{{- if .Values.ingress.annotations }}
{{ toYaml .Values.ingress.annotations | indent 4 }}
{{- end }}
{{- if .Values.ingress.labels }}
  labels:
{{ toYaml .Values.ingress.labels | indent 4 }}
{{- end }}
  name: {{.Values.docker.image_prefix}}nginx-rewrite-ingress
spec:
  rules:
    - host: "{{ .Values.ingress.hostname }}"
      http:
        paths:
          - path: /grafana/?(.*)
            backend:
              serviceName: grafana
              servicePort: 3000
          - path: /(users)
            backend:
              serviceName: {{.Values.docker.image_prefix}}users
              servicePort: 8180
          - path: /(password?.*)
            backend:
              serviceName: {{.Values.docker.image_prefix}}users
              servicePort: 8180
          - path: /(tokens)
            backend:
              serviceName: {{.Values.docker.image_prefix}}users
              servicePort: 8180
          - path: /(things?.*)
            backend:
              serviceName: {{.Values.docker.image_prefix}}things
              servicePort: 8182
          - path: /(channels?.*)
            backend:
              serviceName: {{.Values.docker.image_prefix}}things
              servicePort: 8182
          - path: /(connect?.*)
            backend:
              serviceName: {{.Values.docker.image_prefix}}things
              servicePort: 8182
          - path: /http/?(.*)
            backend:
              serviceName: {{.Values.docker.image_prefix}}adapter-http
              servicePort: 8185
          - path: /ws/?(.*)
            backend:
              serviceName: {{.Values.docker.image_prefix}}adapter-ws
              servicePort: 8186
          - path: /bs/?(.*)
            backend:
              serviceName: {{.Values.docker.image_prefix}}bootstrap
              servicePort: 8202
          - path: /bootstrap/?(.*)
            backend:
              serviceName: {{.Values.docker.image_prefix}}bootstrap
              servicePort: 8202
          - path: /version/users/?(.*)
            backend:
              serviceName: {{.Values.docker.image_prefix}}users
              servicePort: 8180
          - path: /version/things/?(.*)
            backend:
              serviceName: {{.Values.docker.image_prefix}}things
              servicePort: 8182
          - path: /version/http/?(.*)
            backend:
              serviceName: {{.Values.docker.image_prefix}}adapter-http
              servicePort: 8185
          - path: /version/ws/?(.*)
            backend:
              serviceName: {{.Values.docker.image_prefix}}adapter-ws
              servicePort: 8186
          - path: /reader/?(.*)
            backend:
              serviceName: {{.Values.docker.image_prefix}}influxdb-reader
              servicePort: 8905 
          - path: /writer/?(.*)
            backend:
              serviceName: {{.Values.docker.image_prefix}}adapter-http
              servicePort: 8185 
          - path: /(mqtt)
            backend:
              serviceName: {{.Values.docker.image_prefix}}adapter-mqtt
              servicePort: 8081
{{- if .Values.ingress.tls }}
  tls:
    - hosts:
        - {{ .Values.ingress.tls.hostname }}
      secretName: {{ .Values.ingress.tls.secret }}
{{- end }}
---
apiVersion: v1
kind: ConfigMap
data:
  # MQTT adapter:
  1883: "{{.Values.namespace.name}}/{{.Values.docker.image_prefix}}envoy:1883:PROXY"
  8883: "{{.Values.namespace.name}}/{{.Values.docker.image_prefix}}nginx-internal:8883:PROXY"
metadata:
  name: tcp-services
  namespace: {{.Values.namespace.name}}
